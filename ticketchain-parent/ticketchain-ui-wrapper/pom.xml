<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.ticketchain</groupId>
    <artifactId>ticketchain-parent</artifactId>
    <version>develop-SNAPSHOT</version>
  </parent>
  
  <artifactId>ticketchain-ui-wrapper</artifactId>
  <packaging>war</packaging>
  
  	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.version>2.3.1</maven.compiler.version>
		<maven.resources.plugin.version>2.6</maven.resources.plugin.version>
		<servlet.version>3.1</servlet.version>
	</properties>
  
	<build>
		<finalName>ticketchain-ui</finalName>
	
		<plugins>
			<!-- Configuring resources using profiles. See "resources" section below -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>copy_angular_project_into_this_project</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/ticketchain-ui</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>../ticketchain-ui</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy_bower_components_into_this_project</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/ticketchain-ui/bower_components</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>../ticketchain-ui/bower_components</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>process_environment_specific_angular_resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/ticketchain-ui/scripts/env</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>${project.build.directory}/ticketchain-ui/scripts/env/${build.profile.id}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>

					<webResources>
						<!-- Apply filtering to contents of the webapp folder i.e. insert environment 
							specific settings -->
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp</directory>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
					processors -->
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
		</plugins>

		<resources>
			<!-- Instructing the resources plugin to filter contents of resources 
				to go into /classes -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<testResources>
			<!-- Instructing the resources plugin to filter contents of resources 
				to go into /classes in testing -->
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>unpack-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>dev</id>

			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<properties>
				<build.profile.id>dev</build.profile.id>
				<project.dist.directory>app</project.dist.directory>
			</properties>
		</profile>

		<profile>
			<id>test</id>
			<properties>
				<build.profile.id>test</build.profile.id>
				<project.dist.directory>dist/test</project.dist.directory>
			</properties>
		</profile>

		<profile>
			<id>prod</id>
			<properties>
				<build.profile.id>prod</build.profile.id>
				<project.dist.directory>dist/prod</project.dist.directory>
			</properties>
		</profile>
	</profiles>
</project>